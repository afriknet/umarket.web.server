/// <reference path="../../typings/tsd.d.ts" />
"use strict";
var root = require('root-path');
var metadata = require(root('/server/init/meta'));
var breeze_sequel = require(root('/server/breeze_sequel/main'));
var breeze = require('breeze-client');
var _ = require('lodash');
var DT = breeze.DataType;
var Identity = breeze.AutoGeneratedKeyType.Identity;
var Validator = breeze.Validator;
var camelCaseConvention = breeze.NamingConvention.none;
// Breeze Labs: breeze.metadata.helper.js
var helper = new breeze_sequel.breeze.config.MetadataHelper();
// Helper convenience methods
var addDataService = helper.addDataService.bind(helper);
var addTypeToStore = helper.addTypeToStore.bind(helper);
var setDefaultNamespace = helper.setDefaultNamespace.bind(helper);
var dataNameSpace = 'afrikNetMarket';
setDefaultNamespace(dataNameSpace);
function __addEntityType(store, type) {
    var _type = _.extend(type, {
        namespace: dataNameSpace,
        shortName: type.defaultResourceName,
        autoGeneratedKeyType: breeze.AutoGeneratedKeyType.None,
    });
    addTypeToStore(store, _type);
}
function __createDataStore(storeName) {
    var store = new breeze.MetadataStore({
        namingConvention: camelCaseConvention
    });
    addDataService(store, storeName);
    return store;
}
var dbSchema = [];
function __regsiterSchema(srvName, store) {
    dbSchema.push({
        srvName: srvName,
        store: store
    });
}
exports.ModelStore = new breeze.MetadataStore({ namingConvention: camelCaseConvention });
addDataService(exports.ModelStore, 'DataStore');
setDefaultNamespace('afriknetMarket');
function add_to_Store(entity_type) {
    var _type = _.extend(entity_type, {
        namespace: dataNameSpace,
        shortName: entity_type.defaultResourceName,
        autoGeneratedKeyType: breeze.AutoGeneratedKeyType.None,
    });
    addTypeToStore(exports.ModelStore, _type);
}
exports.add_to_Store = add_to_Store;
//export var exportSchema = function (srvName: string): string {
//    var _store = _.find(dbSchema, s => s.srvName === srvName);
//    return _store ? _store.store.exportMetadata() : null;
//}
//export class DataStore {
//    private _store: breeze.MetadataStore;
//    private _storeName: string;
//    constructor(_storeName: string) {
//        this._storeName = _storeName;
//        this._store = __createDataStore(_storeName);
//    }
//    addEntityType(type: EntityTypeDefinition) {
//        __addEntityType(this._store, type);
//    }
//    registerSchema() {
//        __regsiterSchema(this._storeName, this._store);
//    }
//}
//# sourceMappingURL=store.js.map